<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3R8AFrDk+N+6PwAsZMnxv3V/AFjIUuN/6/4AsJClxv/W/QFgQUuM/637A8DClhj/W/cHgAUtMf637g+w
        h6umUzvq6YntaT3+t+6/TXdJtevGUt01wWo9NNUuoEv164ntaTn+t+6/XW9LtWO+VDdIsFrvTLUTe6lu
        lNiW1uN/6/7bdOV0Vqod8yX6RLpIglW6Sjo71U7uJfKF2qaW43/r/tv14FQ75kv1tASrZfxPC63G/9b9
        t834HyZk/M/cWo3/rftvW2/j/79OppWslvE/LbQa/1v33zbjf5iQ8T8ttBj/W/ffPuN/mJDxP3NrMf63
        7r99xv8wIeN/Wph7/G/dfwzG/zAh439amHv8b91/DMb/MCHjf+Y29/jfuv8YjP9hQldLxv/Mbc7xv3X/
        cfxcqp0DS2X8z6oZ/9PCXON/6/5jeXuqnQdLZfzPqhn/M7c5x//W/cdh/A8TMv6nhbnG/9b9x2L8DxMy
        /qeFOcb/1v3HY/wPEzL+Z25zjP+t+4/H+B8mZPxPC3OM/637j8f4HyZk/E8LU4//rfuPyfgfJmT8z9ym
        Hv9b9x+T8T9MyPifFqYc/1v3H1dv4/9fTbBaxv+0MOX437r/uHob//9IgtUy/mduU47/rfuPq4z/e5pW
        Gv+zasb/tDDV+N+6/9iM/2FCxv+0MMX437o/xv8wIeN/5jbV+N+6/9iM/2FCxv+0MMX437o/D0m1c2Op
        jP9ZNeN/Wtjv+N+6P8U7Uu38WCrjf1bN+J+57Xf8b92fwvgfJmT8Twv7Hf9b96cw/ocJGf/Twn7G/9b9
        OcD4HyZk/M/c9jP+t+7PAVdJPU0rP5ZMK1kt439aONzxv3V/zs34HyZk/L+3G6eTO+rOaY0Od/w/yrr/
        g1LteC9V2WjXI+N/mJDx/95+L9U+51LdJa3N4Y7/R1n3v1z6Zqr9GyzRZ9NRqTfG/zAh4/+9XSKdnmqf
        dYm+ni6e1uZwxv8jrfv/dKr9GyzVc1KPjP9hQsb/e7t7qn3OpXppWqNDHf+Ptu7/ulT7d1iqW6UeGf/D
        hIz/92b8v3+HM/4f6X5/4//dGP/DhIz/92b8P41DHf+Pdr///VLt32GpjP93y/ifVTP+35vx/zQOZfw/
        4v3+r0+1f4ulMv7fLeN/Vs34f2/G//t3KOP/Ee/3N/7fjfE/TMj4f2/G/9M4lPH/iM/5N/7fTW/TSuN/
        Vs34f2/G/9PYdfw/6nP+jf9309u00vifVTP+35vx//7tOv4f9Tn/xv+7Mf6HCRn/7834fxq7jP9Hfs6/
        8f9ujP9hQsb/ezP+n8Yu4/+R3+9v/L8b43+YkPH/3oz/92+X8f/I7/c3/t+N8T9MyPh/b8b/07iw8f/o
        7/c3/t9Nb9PK8pZEWC3j/70Z/09jr/G/9/sb/++qt2nlSQlWy/h/b8b/+3dh4/+R1/2L45Lx/4Uz/ocJ
        Gf/vzfh/GnuN/0de9z/A+H83xv8woYel2om9VL+WemL8P42Djf9HX/c/wPh/N8b/MKE/TrUTe6lumHpi
        /L9/Bxv/W/f/DuP/3fQ2rTT+Z9WM//dm/D+Ng43/R1/3P8D4fzfG/zAh4/+9Gf9Pozb+t+7/Xcb/uzH+
        hwkZ/+/N+H//auN/6/7fZfy/G+N/mJDx/96M/6dx/vG/df/zMv7fTW/TSuN/Vs34f2/G/9M4//jfuv95
        Gf/vprdppfE/q2b8vzfj//07//jfuv95Gf/vxvgfJmT8vzfj/2mce/xv3f+CjP93Y/wPEzL+35vx/zQO
        jP+t+9cZ/+/G+B8mZPy/N+P//Tv3+N+6/wUZ/+/m6sn4HyZi/L834/9pHBj/W/evM/7fjfE/TMj4f2/G
        /9Mo43/r/gdn/L8b43+YkPH/3oz/96+M/637H5zx/26M/2FCxv97M/6fRhn/W/c/OOP/3Rj/w4SM//dm
        /D+NXzjn/1Jn/L8b43+Y0IPSCzqqjIp7Yvy/fxdLl/zOf6TC+H83x6bnpdp1Y4lOScb/sFG9jf+/ltY4
        /mdvP5Nqx3upnpsAhmb8Twt/mGrHe6lunQCGZvzP3Iz/ATpj/E8Lxv8AnTH+pwXjf4DOGP8zt97G/59L
        RyeAYRn/04LxP0BnjP9pwfgfoDPG/8zN+B+gM8b/tGD8D9AZ439aMP4H6IzxP3Mz/gfojPE/LRj/A3TG
        +J8WjP8BOmP8z9yM/wE6Y/xPC8b/AJ0x/qcF43+Azhj/Mzfjf4DOGP/TgvE/QGeM/2nB+B+gM8b/zM34
        H6Azxv+0YPwP0Bnjf1ow/gfojPE/czP+B+iM8T8tGP8DdMb4nxaM/wE6Y/zP3Iz/ATpj/E8Lxv8AnTH+
        pwXjf4DOGP8zN+N/gM4Y/9PC/VPteC+V8T8wPON/WnhDqh3vpTL+B4Zn/M/cjP8BOnNkelV6UyeVTWLG
        /9tzq1Q73kv1mAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM5ogj/h9D/1GYZYMB8QAAAABJRU5ErkJggg==
</value>
  </data>
</root>